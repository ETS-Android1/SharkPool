Index: app/src/main/java/com/example/sharkpool_orbital_2019/SentMessageHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/sharkpool_orbital_2019/SentMessageHolder.java	(date 1561731152063)
+++ app/src/main/java/com/example/sharkpool_orbital_2019/SentMessageHolder.java	(date 1561731152063)
@@ -0,0 +1,28 @@
+package com.example.sharkpool_orbital_2019;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.widget.TextView;
+
+import com.sendbird.android.UserMessage;
+
+import java.text.SimpleDateFormat;
+import java.util.Locale;
+
+public class SentMessageHolder extends RecyclerView.ViewHolder {
+    private TextView messageText, timeText;
+
+    SentMessageHolder(View itemView) {
+        super(itemView);
+        messageText = (TextView) itemView.findViewById(R.id.text_message_body);
+        timeText = (TextView) itemView.findViewById(R.id.text_message_time);
+    }
+
+    void bind(UserMessage message) {
+        messageText.setText(message.getMessage());
+
+        // Format the stored timestamp into a readable String using method.
+        SimpleDateFormat dateFormat = new SimpleDateFormat("HH:mm", Locale.getDefault());
+        timeText.setText(dateFormat.format(message.getCreatedAt()));
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/sharkpool_orbital_2019/ChatActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.sharkpool_orbital_2019;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.sendbird.android.GroupChannel;\r\nimport com.sendbird.android.SendBird;\r\nimport com.sendbird.android.SendBirdException;\r\nimport com.sendbird.android.User;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class ChatActivity extends AppCompatActivity {\r\n\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    final String userUID = FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        Bundle bundle = getIntent().getExtras();\r\n        final String otherUID = bundle.getString(\"otherID\");\r\n        List<String> ChatUIDs = new ArrayList<>();\r\n        ChatUIDs.add(userUID);\r\n        ChatUIDs.add(otherUID);\r\n        //Double-checks whether user is connected to SendBird\r\n\r\n        if (SendBird.getConnectionState() != SendBird.ConnectionState.OPEN){\r\n            SendBird.connect(FirebaseAuth.getInstance().getUid(), new SendBird.ConnectHandler() {\r\n                @Override\r\n                public void onConnected(User user, SendBirdException e) {\r\n                    if (e != null){ //error\r\n                        return; //Toast.makeText(getApplicationContext(), \"Failed to connect to messaging service. Check your connection and try again.\", Toast.LENGTH_LONG).show();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        createGroupChannel(ChatUIDs); //creates 1-on-1 channel; goes to previously created one if already created\r\n        //Temporary test message to test for channel creation\r\n        Toast.makeText(getApplicationContext(), \"Channel successfully created!\", Toast.LENGTH_LONG).show();\r\n\r\n        setContentView(R.layout.activity_chat);\r\n\r\n    }\r\n\r\n    private void createGroupChannel(List<String> ChatUIDs){\r\n        GroupChannel.createChannelWithUserIds(ChatUIDs, true, new GroupChannel.GroupChannelCreateHandler() {\r\n            @Override\r\n            public void onResult(GroupChannel groupChannel, SendBirdException e) {\r\n                if (e != null) {\r\n                    // Error!\r\n                    return;\r\n                }\r\n\r\n                Intent intent = new Intent();\r\n                setResult(RESULT_OK, intent);\r\n                //finish();\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/sharkpool_orbital_2019/ChatActivity.java	(revision cf65a173eabfb89e6b6ca6dd8b3af8b76f0a72f9)
+++ app/src/main/java/com/example/sharkpool_orbital_2019/ChatActivity.java	(date 1561731975515)
@@ -3,6 +3,8 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
 import android.widget.Toast;
 
 import com.google.firebase.auth.FirebaseAuth;
@@ -20,6 +22,9 @@
     FirebaseFirestore db = FirebaseFirestore.getInstance();
     final String userUID = FirebaseAuth.getInstance().getCurrentUser().getUid();
 
+    private RecyclerView mMessageRecycler;
+    private MessageListAdapter mMessageAdapter;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -45,7 +50,12 @@
         //Temporary test message to test for channel creation
         Toast.makeText(getApplicationContext(), "Channel successfully created!", Toast.LENGTH_LONG).show();
 
+        messageList
+
         setContentView(R.layout.activity_chat);
+        mMessageRecycler = findViewById(R.id.reyclerview_message_list);
+        mMessageAdapter = new MessageListAdapter(this, messageList); //TODO
+        mMessageRecycler.setLayoutManager(new LinearLayoutManager(this));
 
     }
 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision cf65a173eabfb89e6b6ca6dd8b3af8b76f0a72f9)
+++ .idea/misc.xml	(date 1561731253163)
@@ -1,5 +1,40 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="NullableNotNullManager">
+    <option name="myDefaultNullable" value="org.jetbrains.annotations.Nullable" />
+    <option name="myDefaultNotNull" value="android.support.annotation.NonNull" />
+    <option name="myNullables">
+      <value>
+        <list size="10">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nullable" />
+          <item index="2" class="java.lang.String" itemvalue="javax.annotation.CheckForNull" />
+          <item index="3" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.Nullable" />
+          <item index="4" class="java.lang.String" itemvalue="android.support.annotation.Nullable" />
+          <item index="5" class="java.lang.String" itemvalue="androidx.annotation.Nullable" />
+          <item index="6" class="java.lang.String" itemvalue="androidx.annotation.RecentlyNullable" />
+          <item index="7" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.qual.Nullable" />
+          <item index="8" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NullableDecl" />
+          <item index="9" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NullableType" />
+        </list>
+      </value>
+    </option>
+    <option name="myNotNulls">
+      <value>
+        <list size="9">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.NonNull" />
+          <item index="4" class="java.lang.String" itemvalue="androidx.annotation.NonNull" />
+          <item index="5" class="java.lang.String" itemvalue="androidx.annotation.RecentlyNonNull" />
+          <item index="6" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.qual.NonNull" />
+          <item index="7" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NonNullDecl" />
+          <item index="8" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NonNullType" />
+        </list>
+      </value>
+    </option>
+  </component>
   <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
Index: app/src/main/res/drawable/rounded_rectangle_blue.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/rounded_rectangle_blue.xml	(date 1561728677480)
+++ app/src/main/res/drawable/rounded_rectangle_blue.xml	(date 1561728677480)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" >
+
+    <!-- View background color -->
+    <solid
+        android:color="#2196F3" >
+    </solid>
+
+    <!-- The radius makes the corners rounded -->
+    <corners
+        android:radius="20dp">
+    </corners>
+
+</shape>
+
Index: app/src/main/res/layout/item_message_sent.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_message_sent.xml	(date 1561729252896)
+++ app/src/main/res/layout/item_message_sent.xml	(date 1561729252896)
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<android.support.constraint.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:paddingTop="8dp">
+
+    <TextView
+        android:id="@+id/text_message_body"
+        android:text="hello, hello!"
+        android:background="@drawable/rounded_rectangle_white"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:maxWidth="240dp"
+        android:padding="8dp"
+        android:textColor="#000000"
+        android:layout_marginRight="8dp"
+        app:layout_constraintRight_toRightOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+        android:id="@+id/text_message_time"
+        android:text="11:40"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textSize="10sp"
+        android:layout_marginRight="4dp"
+        app:layout_constraintBottom_toBottomOf="@+id/text_message_body"
+        app:layout_constraintRight_toLeftOf="@+id/text_message_body" />
+
+</android.support.constraint.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/item_message_received.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_message_received.xml	(date 1561729252891)
+++ app/src/main/res/layout/item_message_received.xml	(date 1561729252891)
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<android.support.constraint.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:paddingTop="8dp">
+
+    <TextView
+        android:id="@+id/text_message_body"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="8dp"
+        android:layout_marginTop="8dp"
+        android:background="@drawable/rounded_rectangle_blue"
+        android:maxWidth="240dp"
+        android:padding="8dp"
+        android:text="hi man, how are you?"
+        android:textColor="#FFFFFF"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+        android:id="@+id/text_message_time"
+        android:text="11:40"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textSize="10sp"
+        app:layout_constraintLeft_toRightOf="@+id/text_message_body"
+        android:layout_marginStart="4dp"
+        app:layout_constraintBottom_toBottomOf="@+id/text_message_body" />
+
+</android.support.constraint.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/rounded_rectangle_white.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/rounded_rectangle_white.xml	(date 1561729140080)
+++ app/src/main/res/drawable/rounded_rectangle_white.xml	(date 1561729140080)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" >
+
+    <!-- View background color -->
+    <solid
+        android:color="#BABABA" >
+    </solid>
+
+    <!-- The radius makes the corners rounded -->
+    <corners
+        android:radius="20dp">
+    </corners>
+
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/example/sharkpool_orbital_2019/ReceivedMessageHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/sharkpool_orbital_2019/ReceivedMessageHolder.java	(date 1561731152069)
+++ app/src/main/java/com/example/sharkpool_orbital_2019/ReceivedMessageHolder.java	(date 1561731152069)
@@ -0,0 +1,28 @@
+package com.example.sharkpool_orbital_2019;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.widget.TextView;
+
+import com.sendbird.android.UserMessage;
+
+import java.text.SimpleDateFormat;
+import java.util.Locale;
+
+public class ReceivedMessageHolder extends RecyclerView.ViewHolder {
+    private TextView messageText, timeText;
+
+    ReceivedMessageHolder(View itemView) {
+        super(itemView);
+        messageText = (TextView) itemView.findViewById(R.id.text_message_body);
+        timeText = (TextView) itemView.findViewById(R.id.text_message_time);
+    }
+
+    void bind(UserMessage message) {
+        messageText.setText(message.getMessage());
+
+        // Format the stored timestamp into a readable String using method.
+        SimpleDateFormat dateFormat = new SimpleDateFormat("HH:mm", Locale.getDefault());
+        timeText.setText(dateFormat.format(message.getCreatedAt()));
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_chat.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ChatActivity\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView\"\r\n        android:layout_width=\"171dp\"\r\n        android:layout_height=\"47dp\"\r\n        android:layout_marginStart=\"8dp\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:text=\"Sample Text\"\r\n        android:textSize=\"30sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n</android.support.constraint.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_chat.xml	(revision cf65a173eabfb89e6b6ca6dd8b3af8b76f0a72f9)
+++ app/src/main/res/layout/activity_chat.xml	(date 1561728317254)
@@ -1,23 +1,66 @@
 <?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+
+<android.support.constraint.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".ChatActivity">
+    tools:context="com.sendbird.chattutorial.MessageListActivity">
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/reyclerview_message_list"
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintRight_toRightOf="parent">
+    </android.support.v7.widget.RecyclerView>
 
-    <TextView
-        android:id="@+id/textView"
-        android:layout_width="171dp"
-        android:layout_height="47dp"
-        android:layout_marginStart="8dp"
-        android:layout_marginTop="8dp"
-        android:layout_marginEnd="8dp"
-        android:text="Sample Text"
-        android:textSize="30sp"
-        android:textStyle="bold"
+    <!-- A horizontal line between the chatbox and RecyclerView -->
+    <View
+        android:layout_width="0dp"
+        android:layout_height="2dp"
+        android:background="#dfdfdf"
+        android:layout_marginBottom="0dp"
+        app:layout_constraintBottom_toTopOf="@+id/layout_chatbox"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintRight_toRightOf="parent"/>
+
+    <LinearLayout
+        android:id="@+id/layout_chatbox"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:minHeight="48dp"
+        android:background="#ffffff"
         app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
+        app:layout_constraintRight_toRightOf="parent"
+        app:layout_constraintLeft_toLeftOf="parent">
+
+        <EditText
+            android:id="@+id/edittext_chatbox"
+            android:hint="Enter message"
+            android:background="@android:color/transparent"
+            android:layout_gravity="center"
+            android:layout_marginLeft="16dp"
+            android:layout_marginRight="16dp"
+            android:layout_width="0dp"
+            android:layout_weight="1"
+            android:layout_height="wrap_content"
+            android:maxLines="6"/>
+
+        <Button
+            android:id="@+id/button_chatbox_send"
+            android:text="SEND"
+            android:textSize="14dp"
+            android:background="?attr/selectableItemBackground"
+            android:clickable="true"
+            android:layout_width="64dp"
+            android:layout_height="48dp"
+            android:gravity="center"
+            android:layout_gravity="bottom" />
+
+    </LinearLayout>
+
 </android.support.constraint.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/sharkpool_orbital_2019/MessageListAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/sharkpool_orbital_2019/MessageListAdapter.java	(date 1561731253138)
+++ app/src/main/java/com/example/sharkpool_orbital_2019/MessageListAdapter.java	(date 1561731253138)
@@ -0,0 +1,122 @@
+package com.example.sharkpool_orbital_2019;
+
+
+import android.content.Context;
+import android.support.annotation.NonNull;
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.sendbird.android.BaseMessage;
+import com.sendbird.android.SendBird;
+import com.sendbird.android.UserMessage;
+
+import java.text.SimpleDateFormat;
+import java.util.List;
+import java.util.Locale;
+
+public class MessageListAdapter extends RecyclerView.Adapter {
+    private static final int VIEW_TYPE_MESSAGE_SENT = 1;
+    private static final int VIEW_TYPE_MESSAGE_RECEIVED = 2;
+
+    private Context mContext;
+    private List<BaseMessage> mMessageList;
+
+    public MessageListAdapter(Context context, List<BaseMessage> messageList) {
+        mContext = context;
+        mMessageList = messageList;
+    }
+
+    @Override
+    public int getItemCount() {
+        return mMessageList.size();
+    }
+
+    // Determines the appropriate ViewType according to the sender of the message.
+    @Override
+    public int getItemViewType(int position) {
+        UserMessage message = (UserMessage) mMessageList.get(position);
+
+        if (message.getSender().getUserId().equals(SendBird.getCurrentUser().getUserId())) {
+            // If the current user is the sender of the message
+            return VIEW_TYPE_MESSAGE_SENT;
+        } else {
+            // If some other user sent the message
+            return VIEW_TYPE_MESSAGE_RECEIVED;
+        }
+    }
+
+    // Inflates the appropriate layout according to the ViewType.
+    @NonNull
+    @Override
+    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        View view;
+
+        if (viewType == VIEW_TYPE_MESSAGE_SENT) {
+            view = LayoutInflater.from(parent.getContext())
+                    .inflate(R.layout.item_message_sent, parent, false);
+            return new SentMessageHolder(view);
+        } else if (viewType == VIEW_TYPE_MESSAGE_RECEIVED) {
+            view = LayoutInflater.from(parent.getContext())
+                    .inflate(R.layout.item_message_received, parent, false);
+            return new ReceivedMessageHolder(view);
+        }
+
+        return null;
+    }
+
+    // Passes the message object to a ViewHolder so that the contents can be bound to UI.
+    @Override
+    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
+        UserMessage message = (UserMessage) mMessageList.get(position);
+
+        switch (holder.getItemViewType()) {
+            case VIEW_TYPE_MESSAGE_SENT:
+                ((SentMessageHolder) holder).bind(message);
+                break;
+            case VIEW_TYPE_MESSAGE_RECEIVED:
+                ((ReceivedMessageHolder) holder).bind(message);
+        }
+    }
+
+    private class SentMessageHolder extends RecyclerView.ViewHolder {
+        TextView messageText, timeText;
+
+        SentMessageHolder(View itemView) {
+            super(itemView);
+
+            messageText = (TextView) itemView.findViewById(R.id.text_message_body);
+            timeText = (TextView) itemView.findViewById(R.id.text_message_time);
+        }
+
+        void bind(UserMessage message) {
+            messageText.setText(message.getMessage());
+
+            // Format the stored timestamp into a readable String using method.
+            SimpleDateFormat dateFormat = new SimpleDateFormat("HH:mm", Locale.getDefault());
+            timeText.setText(dateFormat.format(message.getCreatedAt()));
+        }
+    }
+
+    private class ReceivedMessageHolder extends RecyclerView.ViewHolder {
+        TextView messageText, timeText, nameText;
+
+        ReceivedMessageHolder(View itemView) {
+            super(itemView);
+
+            messageText = (TextView) itemView.findViewById(R.id.text_message_body);
+            timeText = (TextView) itemView.findViewById(R.id.text_message_time);
+        }
+
+        void bind(UserMessage message) {
+            messageText.setText(message.getMessage());
+
+            // Format the stored timestamp into a readable String using method.
+
+            SimpleDateFormat dateFormat = new SimpleDateFormat("HH:mm", Locale.getDefault());
+            timeText.setText(dateFormat.format(message.getCreatedAt()));
+        }
+    }
+}
\ No newline at end of file
